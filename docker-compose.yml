version: '3'

services:
  frontend:
    build:
      context: ./front-end/tg-app-shop
      dockerfile: Dockerfile
    container_name: tg_shop_frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=${BACKEND_URL}
    volumes:
      - ./front-end/tg-app-shop:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./beack-end
      dockerfile: Dockerfile
    container_name: tg_shop_backend
    ports:
      - "7770:7770"
    environment:
      # Настройки базы данных
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      
      # Настройки админов
      - TG_ADMINS=${TG_ADMINS}
      - DELETE_DATABASE=${DELETE_DATABASE}
      
      # Настройки бота
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}
      - TG_BOT_WEBAPP_NAME=${TG_BOT_WEBAPP_NAME}
      - TG_BOT_USERNAME=${TG_BOT_USERNAME}
      
      # Настройки веб-приложения
      - FRONTEND_URL=${FRONTEND_URL}
      - BACKEND_URL=${BACKEND_URL}
      - TG_WEB_APP_URL=${TG_WEB_APP_URL}
      - TG_WEB_APP_NAME=${TG_WEB_APP_NAME}
      - TG_WEB_APP_DESCRIPTION=${TG_WEB_APP_DESCRIPTION}
      - TG_WEB_APP_START_PARAM=${TG_WEB_APP_START_PARAM}
      - TG_WEB_APP_START_PARAM_ENCRYPTED=${TG_WEB_APP_START_PARAM_ENCRYPTED}
      - TG_WEB_APP_START_PARAM_ENCRYPTED_LENGTH=${TG_WEB_APP_START_PARAM_ENCRYPTED_LENGTH}
      
      # Настройки поддержки
      - TG_SUPPORT_USERNAME=${TG_SUPPORT_USERNAME}
      - TG_SUPPORT_PHONE=${TG_SUPPORT_PHONE}
      - TG_SUPPORT_EMAIL=${TG_SUPPORT_EMAIL}
      - TG_SUPPORT_ADDRESS=${TG_SUPPORT_ADDRESS}
      - TG_SUPPORT_WORK_TIME=${TG_SUPPORT_WORK_TIME}
    volumes:
      - ./beack-end:/app
      - ./static:/app/static
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres:14
    container_name: tg_shop_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
    networks:
      - app-network

  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    environment:
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}
      - TG_WEB_APP_URL=${TG_WEB_APP_URL}
      - TG_SUPPORT_USERNAME=${TG_SUPPORT_USERNAME}
      - TG_SUPPORT_PHONE=${TG_SUPPORT_PHONE}
      - TG_SUPPORT_EMAIL=${TG_SUPPORT_EMAIL}
      - TG_SUPPORT_ADDRESS=${TG_SUPPORT_ADDRESS}
      - TG_SUPPORT_WORK_TIME=${TG_SUPPORT_WORK_TIME}
      - TG_BOT_WEBAPP_NAME=${TG_BOT_WEBAPP_NAME}
    depends_on:
      - backend

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge 